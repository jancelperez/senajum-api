'use strict';
// ava es para poder realizar los test

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _micro = require('micro');

var _micro2 = _interopRequireDefault(_micro);

var _testListen = require('test-listen');

var _testListen2 = _interopRequireDefault(_testListen);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _auth = require('../auth');

var _auth2 = _interopRequireDefault(_auth);

var _fixtures = require('./fixtures');

var _fixtures2 = _interopRequireDefault(_fixtures);

var _utils = require('../lib/utils');

var _utils2 = _interopRequireDefault(_utils);

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// importamos el modulu pictures el cual creamos para el sistema de enrutamiento


// test-liste es una herramienta que me permite hacer test con microservicios
_ava2.default.beforeEach(async t => {
  let servidor = (0, _micro2.default)(_auth2.default);
  t.context.url = await (0, _testListen2.default)(servidor);
});

// test para autenticacion


// request-promise permite hacer http utilizando promesas


// send es el metodo para enviar respuestas
(0, _ava2.default)('autenticacion POST /', async t => {
  let user = _fixtures2.default.getUsuario();
  let url = t.context.url;

  let options = {
    method: 'POST',
    uri: url,
    body: {
      username: user.username,
      password: user.password
    },
    // le eston diciendo que esto es formato json
    json: true

    // esto nos va a retonrnar un token
  };let token = await (0, _requestPromise2.default)(options);
  let decoded = await _utils2.default.verificarToken(token, _config2.default.secret);

  t.is(decoded.username, user.username);
});
//# sourceMappingURL=..\node_modules\.cache\ava\6022c5ec37d498be1e99847efbf13cf0.js.map