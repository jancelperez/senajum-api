{"version":3,"sources":["pictures-test.js"],"names":["t","id","v4","servidor","req","res","url","body","json","deepEqual","todo"],"mappings":"AAAA;AACA;;AACA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;;;AAEA;AACA;AACA;;;AARA;;;AANA;AAeA,mBAAK,WAAL,EAAkB,MAAMA,CAAN,IAAW;AAC3B;AACA,MAAIC,KAAK,mBAAKC,EAAL,EAAT;;AAEA;AACA,MAAIC,WAAW,qBAAM,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvC,qBAAKA,GAAL,EAAU,GAAV,EAAe,EAAEJ,EAAF,EAAf;AACD,GAFc,CAAf;;AAIA;AACA;AACA,MAAIK,MAAM,MAAM,0BAAOH,QAAP,CAAhB;;AAEA;AACA,MAAII,OAAO,MAAM,8BAAQ,EAACD,KAAKA,GAAN,EAAWE,MAAM,IAAjB,EAAR,CAAjB;;AAEA;AACAR,IAAES,SAAF,CAAYF,IAAZ,EAAkB,EAAEN,EAAF,EAAlB;AACD,CAlBD;AAmBA;;;AAzBA;;;AANA;AAgCA,cAAKS,IAAL,CAAU,QAAV;AACA,cAAKA,IAAL,CAAU,cAAV","file":"pictures-test.js","sourcesContent":["'use strict'\r\n// ava es para poder realizar los test\r\nimport test from 'ava'\r\n\r\n// send es el metodo para enviar respuestas\r\nimport micro, { send } from 'micro'\r\n\r\n// uuid es para trabajar con id\r\nimport uuid from 'uuid-base62'\r\n\r\n// test-liste es una herramienta que me permite hacer test con microservicios\r\nimport listen from 'test-listen'\r\n\r\n// request-promise permite hacer http utilizando promesas\r\nimport request from 'request-promise'\r\n\r\n// importamos el modulu pictures el cual creamos para el sistema de enrutamiento\r\n// import pictures from '../pictures'\r\n// GET /id es la primera ruta la cual es un test asincrono\r\ntest('GET /: ID', async t => {\r\n  // generar un id como si fuera el id de la imagen\r\n  let id = uuid.v4()\r\n\r\n  // cramos un servidor utilizando micro el cual recibe la funcion main que tiene los objetos res y req\r\n  let servidor = micro(async (req, res) => {\r\n    send(res, 200, { id })\r\n  })\r\n\r\n  // listen retorna una url con url y puerto con el cual el servidor esta corriendo el puerto lo crea listen\r\n  // listenn retorna una promesa\r\n  let url = await listen(servidor)\r\n\r\n  // hacer la peticion http diciendo que nos devuelva los datos en json\r\n  let body = await request({url: url, json: true})\r\n\r\n  // con deepEquual varlidar que el cuerpo que nos retorna es igual al objeto que obtiene el id\r\n  t.deepEqual(body, { id })\r\n})\r\n// una de las caracteristicas de ava es definir el test sin implementar el test esto lo puedo hacer con todo\r\ntest.todo('POST /')\r\ntest.todo('POST /:/like')\r\n"]}