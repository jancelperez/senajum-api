'use strict';
// ava es para poder realizar los test

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _micro = require('micro');

var _micro2 = _interopRequireDefault(_micro);

var _testListen = require('test-listen');

var _testListen2 = _interopRequireDefault(_testListen);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _pictures = require('../pictures');

var _pictures2 = _interopRequireDefault(_pictures);

var _fixtures = require('./fixtures');

var _fixtures2 = _interopRequireDefault(_fixtures);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// GET /id es la primera ruta la cual es un test asincrono


// importamos el modulu pictures el cual creamos para el sistema de enrutamiento


// uuid es para trabajar con id
// import uuid from 'uuid-base62'

// test-liste es una herramienta que me permite hacer test con microservicios
(0, _ava2.default)('GET /:id', async t => {
  // generar un id como si fuera el id de la imagen
  let imagen = _fixtures2.default.getImagen();

  // cramos un servidor utilizando micro el cual recibe la funcion main que tiene los objetos res y req
  let servidor = (0, _micro2.default)(_pictures2.default);

  // listen retorna una url con url y puerto con el cual el servidor esta corriendo el puerto lo crea listen
  // listenn retorna una promesa
  let url = await (0, _testListen2.default)(servidor);

  // hacer la peticion http diciendo que nos devuelva los datos en json
  let body = await (0, _requestPromise2.default)({ url: `${url}/${imagen.publicId}`, json: true });

  // con deepEquual validar que el cuerpo que nos retorna es igual al objeto que obtiene el id
  t.deepEqual(body, imagen.publicId);
  console.log(typeof body);
  console.log(typeof imagen.publicId);
});
// una de las caracteristicas de ava es definir el test sin implementar el test esto lo puedo hacer con todo


// request-promise permite hacer http utilizando promesas


// send es el metodo para enviar respuestas
_ava2.default.todo('POST/');
_ava2.default.todo('POST/:/like');
//# sourceMappingURL=..\node_modules\.cache\ava\823f3735afcd76f39b2d55fc5c2d13a9.js.map