'use strict';
// ava es para poder realizar los test

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _micro = require('micro');

var _micro2 = _interopRequireDefault(_micro);

var _testListen = require('test-listen');

var _testListen2 = _interopRequireDefault(_testListen);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _users = require('../users');

var _users2 = _interopRequireDefault(_users);

var _fixtures = require('./fixtures');

var _fixtures2 = _interopRequireDefault(_fixtures);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// importamos el modulu pictures el cual creamos para el sistema de enrutamiento


// test-liste es una herramienta que me permite hacer test con microservicios
_ava2.default.beforeEach(async t => {
  let servidor = (0, _micro2.default)(_users2.default);
  t.context.url = await (0, _testListen2.default)(servidor);
});

// request-promise permite hacer http utilizando promesas


// send es el metodo para enviar respuestas


(0, _ava2.default)('POST /', async t => {
  let user = _fixtures2.default.getUsuario();
  let url = t.context.url;

  let options = {
    method: 'POST',
    uri: url,
    body: {
      name: user.name,
      password: user.pasword,
      email: user.email
    },
    json: true,
    // para verificar si respondio correctamen con el codigo
    // resuelva la promesa con toda la respuesta
    // reseolveWithFullResponse es una propiedad de reques promise
    resolveWithFullResponse: true
  };

  let response = await (0, _requestPromise2.default)(options);

  // yo no quiero que el usuario autenticarse mi api devuelva estos dos campos
  delete user.email;
  delete user.pasword;

  // verificar que el statusCode sea igual a 201 osea que halla sido creado
  t.is(response.statusCode, 201);
  // garantizar que el objeto que e creado ose el body sea igual al usuario
  t.deepEqual(response.body, user);
});

_ava2.default.todo('GET /:username');
//# sourceMappingURL=..\node_modules\.cache\ava\9c7a6702911cd0d745742c3f5c1e41bc.js.map